name: test

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'

env:
  app-name: 'morsed'
  graalvm-download-url-prefix: 'https://github.com/graalvm/graalvm-ce-builds/releases/download'
  graalvm-version: '20.2.0'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: lein deps
      - run: lein cloverage --codecov
      - uses: codecov/codecov-action@v1

  test-native-image:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            os: linux
          - runs-on: macOS-latest
            os: darwin
          - runs-on: windows-latest
            os: windows
    steps:
      - uses: actions/checkout@v2
      - name: Install GraalVM (unix)
        run: |
          cd /tmp
          curl -O -sL ${{ env.graalvm-download-url-prefix }}/vm-${{ env.graalvm-version }}/graalvm-ce-java11-${{ matrix.os }}-amd64-${{ env.graalvm-version }}.tar.gz
          tar xzf graalvm-ce-java11-${{ matrix.os }}-amd64-${{ env.graalvm-version }}.tar.gz
        if: matrix.os != 'windows'
      - name: Install GraalVM (windows)
        run: |
          cd /tmp
          curl -O -sL ${{ env.graalvm-download-url-prefix }}/vm-${{ env.graalvm-version }}/graalvm-ce-java11-${{ matrix.os }}-amd64-${{ env.graalvm-version }}.zip
          unzip graalvm-ce-java11-${{ matrix.os }}-amd64-${{ env.graalvm-version }}.zip
        if: matrix.os == 'windows'

      - name: Set environment variables (linux)
        run: |
          echo "GRAALVM_HOME=/tmp/graalvm-ce-java11-${{ env.graalvm-version }}" >> $GITHUB_ENV
        if: matrix.os == 'linux'

      - name: Set environment variables (darwin)
        run: |
          echo "GRAALVM_HOME=/tmp/graalvm-ce-java11-${{ env.graalvm-version }}/Contents/Home" >> $GITHUB_ENV
        if: matrix.os == 'darwin'

      - name: Set environment variables (windows)
        run: |
          echo "GRAALVM_HOME=/tmp/graalvm-ce-java11-${{ env.graalvm-version }}" >> $GITHUB_ENV
        if: matrix.os == 'windows'

      - name: Build native image
        run: |
          $GRAALVM_HOME/bin/gu install native-image
          lein uberjar
          $GRAALVM_HOME/bin/native-image \
            -jar target/${{ env.app-name }}.jar \
            -H:Name=${{ env.app-name }} \
            -H:+ReportExceptionStackTraces \
            -J-Dclojure.spec.skip-macros=true \
            -J-Dclojure.compiler.direct-linking=true \
            "-H:IncludeResources=command.edn" \
            "-H:IncludeResources=schema.edn" \
            "-H:IncludeResources=config.edn" \
            "-H:IncludeResources=version.txt" \
            "-H:IncludeResources=docs.adoc" \
            '-H:IncludeResources=.*/.*.bin$' \
            --initialize-at-build-time  \
            --report-unsupported-elements-at-runtime \
            -H:Log=registerResource: \
            --verbose \
            --no-fallback \
            --no-server \
            --static \
            "-J-Xmx3g"
          ls -lah

      - name: Run command
        run: |
          ./${{ env.app-name }}
          ./${{ env.app-name }} -p 名詞 -s 寿司 吾輩は猫である。
